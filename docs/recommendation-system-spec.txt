# Bunshare リコメンドシステム仕様書

作成日: 2025年9月9日
更新日: 2025年9月9日
バージョン: v2.0

## 1. システム概要

### 1.1 基本構成
- 3段階適応型推薦システム
- ユーザー行動データに基づく戦略自動切替
- CTR統合品質評価システム
- インプレッション追跡・分析機能

### 1.2 推薦戦略の種類
1. **personalized（個人化推薦）**: 総行動数50以上
   - フォロー作家作品 + カテゴリ・タグベース推薦
   - 高度個人化アルゴリズム

2. **adaptive（適応的推薦）**: 総行動数10-49
   - 個人化 + 人気作品のハイブリッド
   - バランス型推薦

3. **popular（人気ベース推薦）**: 総行動数10未満 or ゲストユーザー
   - 人気作品 + 新着優良作品
   - キャッシュ活用で高速配信

## 2. データモデル

### 2.1 ユーザー行動データ（UserBehaviorData）
```
likes_count: number          # いいね数
bookmarks_count: number      # ブックマーク数
views_count: number          # 視聴数
shares_count: number         # シェア数
comments_count: number       # コメント数
follows_count: number        # フォロー数
```

### 2.2 行動重み付けシステム
- **ブックマーク**: 15ポイント（最高重み）
- **いいね**: 10ポイント（高重み）
- **コメント**: 8ポイント（中重み）
- **視聴**: 3ポイント + リピートボーナス（最大6ポイント）

### 2.3 スナップショット統計（v2.0新機能）
- 推薦生成時点での統計値を固定化
- `snapshot_views`, `snapshot_likes`, `snapshot_comments`として保持
- ユーザーアクション（いいね等）による順序変動を防止

### 2.4 嗜好分析期間
- 分析対象期間: 直近30日間
- 作品別重み付けによるカテゴリ・タグ分析
- 重複視聴によるボーナス加点システム

## 3. 推薦アルゴリズム詳細

### 3.1 個人化推薦（personalized）- v2.0改訂
**データソース（統合プール方式）**:
- フォロー作家作品: 最大15件取得
- カテゴリ・タグベース作品: 最大20件取得
- **統合プール35件から品質評価で上位20件を選出**

**フォロー作品の扱い（v2.0変更）**:
- 強制表示を廃止
- フォロー作家ボーナス: +1点（品質評価内で優遇）
- 品質が低ければ選出されない

### 3.2 適応的推薦（adaptive）- v2.0改訂
**データソース（統合プール方式）**:
- フォロー作家作品: 最大10件取得
- カテゴリ・タグベース作品: 最大12件取得
- 人気作品: 最大10件取得
- **統合プール32件から品質評価で上位20件を選出**

### 3.3 人気ベース推薦（popular）
**データソース**:
- 人気作品: 12件
- 新着優良作品: 8件（CTR統合品質評価）

## 4. 品質スコア統合システム

### 4.1 総合品質スコア計算
```
総合スコア = 品質スコア(30%) + ユーザー行動スコア(70%)
```

### 4.2 ユーザー行動スコア（0-10点）- v2.0改訂
- **基本エンゲージメント指標**（スナップショット値使用）:
  - ビュー数: 1000ビューで満点（30%重み）
  - いいね数: 100いいねで満点（50%重み）
  - コメント数: 20コメントで満点（20%重み）

- **カテゴリ・タグマッチング加点**:
  - カテゴリマッチ: +2点
  - タグマッチ: +1.5点

- **新着ボーナス**:
  - 1週間以内の新作: +1点

- **フォロー作家ボーナス（v2.0変更）**:
  - フォロー作家作品: +1点（2点から減少）

### 4.3 品質スコア詳細（v2.0改訂）

**品質スコア構成要素**:
```
品質スコア = 
  CTRスコア × 0.4 +           // 40%: クリック率
  エンゲージメント × 0.3 +     // 30%: 表示時間・割合・頻度
  コンテンツ品質 × 0.2 +       // 20%: 文章量・画像・タイトル
  一貫性スコア × 0.1           // 10%: 将来実装予定
```

**CTRスコア（40%）**:
- 5%CTRで約8点、15%以上で満点
- 対数スケーリング適用

**エンゲージメントスコア（30%）**:
- 表示時間: 5秒以上で満点（40%）
- 表示割合: 90%以上で満点（30%）
- 露出頻度: 1000imp以上で満点（30%）

**コンテンツ品質スコア（20%）- v2.1改訂基準**:
- 文章量（40%）:
  - 10文字以下: 0.1点（大幅減点）
  - 2000文字以上: 4点
  - 1000-2000文字: 3点
  - 500-1000文字: 2点
  - 200-500文字: 1点
  - 200文字未満: 0.5点（ペナルティ）
- 画像（30%）:
  - 画像あり: 3点（以前の7点から減少）
  - 画像なし: 1点
- タイトル品質（15%）: 10-50文字で1.5点
- 説明文品質（15%）: 20文字以上で1.5点

## 5. チャレンジ推薦システム

### 5.1 統合比率
- 通常推薦: 80%（72作品中58作品）
- チャレンジ推薦: 20%（72作品中14作品）
- **表示方式**: 初期9件表示 → 「もっと表示する」で段階的拡張（無制限）

### 5.2 チャレンジ作品種類
- new_category: 未体験カテゴリ
- new_author: 未フォロー作家
- trending: トレンド作品
- quality_discovery: 高品質発見作品

### 5.3 配置戦略
- 5作品に1作品の割合で配置
- ステルス統合（目立ちすぎない配置）
- 段階的表示により初期読み込み高速化
- 無制限ローディング（除外リスト機能付き）

## 6. キャッシュ戦略

### 6.1 ゲスト向け推薦
- キャッシュ期間: 30分
- キャッシュキー: 'guest-recommendations'
- 高速配信重視

### 6.2 人気作品・新着作品
- キャッシュ期間: 30分（人気作品）、15分（新着作品）
- 認証ユーザーはキャッシュなしでリアルタイム処理

### 6.3 CTR統計
- キャッシュ期間: 1時間
- バッチ計算による効率化

## 7. インプレッション追跡システム

### 7.1 追跡対象
- 表示割合: 50%以上
- 表示時間: 1秒以上
- セッション重複防止

### 7.2 データ保存
**テーブル**: impressions_log
```sql
user_id, work_id, impression_type, page_context, position, 
session_id, user_agent, viewport_width, viewport_height,
intersection_ratio, display_duration, impressed_at
```

### 7.3 バッチ送信
- 送信間隔: 2秒
- 異常値検出・フィルタリング
- ボット検出機能

## 8. 読了率ベース除外システム（v2.1新機能）

### 8.1 除外条件
- 対象: 読了率10%を超える作品
- 期間: 1日間（実装上は即時除外、プログレス更新で解除）
- 適用: 個人化・適応的・フォールバック推薦すべて

### 10.2 技術詳細
- データソース: `reading_progress`テーブル
- フィルタリング: `filterRecentlyReadWorks()`関数
- 実装位置: 品質スコア統合前の前処理

### 8.3 メリット
- 同じ作品の重複推薦防止
- ユーザー体験向上（既読作品の非表示）
- 多様性向上（新しい作品の発見促進）

## 9. 技術実装

### 10.1 ファイル構成
```
src/features/home/
├── server/
│   ├── recommendations.ts    # メイン推薦ロジック
│   ├── loader.ts            # データローダー
│   └── qualityFilter.ts     # CTR品質フィルタ（新規）
├── sections/
│   └── RecommendationsSection.tsx
├── components/
│   └── RecommendationsSuspense.tsx
└── types.ts
```

### 10.2 主要関数
- `getRecommendationsAction()`: メイン推薦関数
- `determineStrategy()`: 戦略決定
- `deduplicateAndSortWithQualityScore()`: 重複排除・品質ソート
- `blendWithChallengeWorks()`: チャレンジ統合
- `getQualityNewWorksWithCTR()`: CTR統合新作評価

## 10. 現在の問題点（v2.0で一部解決）

### 10.1 同一作品高頻度表示問題（部分的に解決）
**v2.0での改善**:
- ✅ スナップショット統計により順序安定化
- ✅ フォロー作品の強制表示廃止
- ✅ 文章量による品質評価導入

**残存課題**:
1. キャッシュによる推薦固定化（30分間同じ推薦）
2. セッション内重複防止機能なし
3. ~~最近表示作品の履歴管理なし~~ → 読了率ベース除外システム実装

### 10.2 多様性不足の要因（v2.1で改善予定）
- ~~チャレンジ推薦12.5%では不十分の可能性~~ → 20%に増加
- カテゴリ・作者の分散度考慮なし

## 11. 改善提案

### 12.1 緊急対応（v2.1で改善済み）
1. ~~**最近表示作品除外機能**~~ → 読了率10%超え作品の1日間除外を実装
   - 読書進捗データ活用
   - ユーザー体験向上

2. **多様性スコア導入**
   - カテゴリ・作者・時期の分散考慮
   - 品質スコアとのバランス調整

### 12.2 中期改善
1. **ローテーション機制**
   - 固定化防止のランダム要素追加
   - キャッシュ戦略の見直し

2. **推薦説明機能**
   - なぜこの作品が推薦されたかの説明
   - ユーザーフィードバック収集

3. **多様性スコア最適化**
   - チャレンジ推薦20%の効果測定
   - 必要に応じてさらなる調整検討

## 12. メトリクス・KPI

### 12.1 品質指標
- CTR（クリック率）
- インプレッション数
- 平均表示時間
- 表示割合

### 12.2 多様性指標
- カテゴリ分散度
- 作者分散度
- 推薦セッション内重複率

### 12.3 ユーザー満足度
- いいね率
- ブックマーク率
- シェア率
- 継続閲覧率

---

## 補足事項

- デバッグログは本番環境では削除予定
- TypeScript型定義は継続的に改善中
- パフォーマンス最適化は継続課題
- A/Bテスト機能の実装を検討中

この仕様書は実装状況に応じて継続的に更新される。

---

## 変更履歴

### v2.3 (2025年9月9日)
**段階的ローディングシステム**:
- ✅ 無制限推薦表示 - 「もっと表示する」で動的ロード
- ✅ 推薦生成数倍増 (36件 → 72件) - より豊富なコンテンツ
- ✅ 除外リスト機能 - 既表示作品の重複防止
- ✅ 追加推薦API実装 - `/api/recommendations/more`
- ✅ 非同期ローディング状態管理 - UX向上

### v2.2 (2025年9月9日)
**パフォーマンス最適化**:
- ✅ 認証ユーザー向け推薦キャッシュ導入 (個人化10分・適応的15分)
- ✅ 品質スコア事前計算キャッシュ (1時間・キャッシュヒット率向上)
- ✅ ユーザーデータ取得統合 - DB問い合わせ最適化
- ✅ 並列処理強化 - 推薦計算の高速化
- ✅ スケルトンUI導入 - 体感速度改善

### v2.1 (2025年9月9日)
**多様性・UX改善**:
- ✅ チャレンジ推薦割合増加 (12.5% → 20%) - より多様な作品発見を促進
- ✅ 段階的表示システム導入 (初期9件 → もっと表示するで36件まで拡張)
- ✅ 推薦生成数増加 (20件 → 36件) - より多くの選択肢提供
- ✅ 読了率ベース除外システム - 10%超え作品を1日間非表示（重複回避）
- ✅ 極短文作品への大幅減点 - 10文字以下の作品を0.1点に設定

### v2.0 (2025年9月9日)
**主要改善**:
- ✅ スナップショット統計システム導入 - ユーザーアクション時の順序変動防止
- ✅ フォロー作品の強制表示を廃止 - 統合プール方式で品質評価
- ✅ コンテンツ品質評価システム強化 - 文章量重視、画像依存度低減
- ✅ フォロー作家ボーナス調整 (+2点 → +1点)
- ✅ デバッグスコア表示機能追加 - 開発・調整用

**解決した問題**:
1. 同一作品高頻度表示問題（部分的解決）
2. いいね・ブックマーク時の推薦順序変動
3. 品質の低いフォロー作品の強制表示
4. 画像有無による過度な品質偏向
5. 短文作品の品質過大評価

**技術的変更**:
- `deduplicateAndSortWithQualityScore()`: スナップショット値使用
- `getFollowingAuthorsWorks()`: 統合プール方式採用
- `calculateContentQualityScore()`: 文章量評価追加
- `WorkCard`: デバッグ情報表示追加

### v1.0 (2025年9月8日)
**初期実装**:
- 3段階適応型推薦システム
- CTR統合品質評価
- インプレッション追跡機能
- チャレンジ推薦システム